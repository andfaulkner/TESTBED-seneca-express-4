# EXAMPLE POSTGRES INITIALIZATION::
#
# sudo -u postgres psql postgres

# Create a local db with user postgres:
#
# "initdb --pgdata=/home/andfaulkner/Projects/testbed/express-backbone-testbed-3/dbstore --username=postgres
#       or try...
#               "initdb --pgdata=/home/andfaulkner/Projects/testbed/express-backbone-testbed-3/dbstore --use
#
# postgres --coordinator -D /home/andfaulkner/Projects/testbed/express-backbone-testbed-3/dbstore

## kill a running db:
# example:  kill a db running in /home/andfaulkner/Projects/testbed/express-backbone-testbed-3/dbstore/
#
PGDATA=/home/andfaulkner/Projects/testbed/express-backbone-testbed-3/dbstore/ pg_ctl stop

# open a db named postgres, with user postgres
#
sudo -u postgres psql postgres

########################################
# it all starts with...
    pg_ctl
# AND
    postmaster
# AND
    psql
# AND
    postgres
########################################

/////////////////////////////////////////// DEFINITIONS ///////////////////////////////////////////

Schema:         named collection of tables.  Can also contain views, indexes, sequences, data
                types, operators, and functions. Analogous to directories (at the OS level) -
                except that schemas can't be nested. Create using:
                        CREATE SCHEMA nameofschema;

Tablespace:     storage location where the actual data underlying database objects can be kept/
                In other words, it's an actual place on the hard disk holding the db data.
                        CREATE TABLESPACE nameoftablespace LOCATION '/path/to/tablespace/folder';

///////////////////////////////////////////////////////////////////////////////////////////////////

*************************************
********* HELP COMMANDS *************
*************************************
=== ONCE LOGGED IN ===
\?      -       psql command help
\h      -       sql command help
\q      -       exit postgres

*************************************
********* INFO COMMANDS *************
*************************************
\du  OR \dg     -       list roles (users)
\l              -       list databases
\dt[S+]         -       list tables
\db[+]          -       list tablespaces

\dn             -       list schemas

//***********************************************************************************//
//------------------------------------ USERS ----------------------------------------//
//
*************************************
******* ADD NEW USER (ROLE) *********
*************************************
* Make a new superuser
    CREATE ROLE andrew WITH SUPERUSER;

* Make a new superuser who has to log in (with password '1q2w3e4r')
    CREATE ROLE andfaulkner WITH SUPERUSER LOGIN PASSWORD '1q2w3e4r';


*************************************
******* DELETE USER (ROLE) **********
*************************************
* Delete a user (role):
    DROP ROLE nameofuser;

* Delete a user (role): without throwing error if user doesn't exist
    DROP ROLE IF EXISTS nameofuser;

*************************************
**** ALTER A USER (ROLE)
*************************************
* Provide a user with the ability to log in:
    ALTER ROLE nameofuser WITH LOGIN

//
//-----------------------------------------------------------------------------------//
//***********************************************************************************//


//***********************************************************************************//
//---------------------------------- DATABASES --------------------------------------//
//
***********************************
******** MAKE A DATABASE **********
***********************************
* Make a single, basic database
    CREATE DATABASE nameofnewdb;


***********************************
******** SELECT DATABASE **********
***********************************
* Switch to a different database - i.e. make a different db the current db:
    \c nameofdbtoselect

//
//-----------------------------------------------------------------------------------//
//***********************************************************************************//


//***********************************************************************************//
//------------------------------------- DATA ----------------------------------------//
//
*************************************
**** MAKE A SCHEMA
*************************************
* Create a schema with a given name:
    CREATE SCHEMA nameofschema;


*************************************
**** MAKE A TABLESPACE
*************************************
* Create a tablespace at a given location:
    CREATE TABLESPACE nameoftablespace LOCATION '/path/to/tablespace/folder'

***********************************
***** MAKE A TABLE
***********************************
* Make 2 column table named test_table_2, in currently selected database:
    CREATE TABLE test_table_2(
        test_column_1 TEXT PRIMARY KEY,
        test_column_2 TEXT);
//-----------------------------------------------------------------------------------//
//***********************************************************************************//


